

1、不正常的情况   pos 大于等于0  stack.length - 1  >  pos
<div id='app'> <span><a></span> {{ message }}</div>

stack  [div,span,a]  

stack[2].name === name
        a     === span

stack[1].name === name
        span  === span

2、正常的情况下   pos 大于等于0   stack.length - 1  ==  pos
<div id='app'> <span></span> {{ message }}</div>

stack  [div,span]  

stack[1].name === name
        span  === span

3、不正常的情况下   pos 小于0   
<div id='app'> <span></a></span> {{ message }}</div>

stack  [div,span]  

stack[1].name === name
         span  === a

stack[0].name === name
         div  === a


与浏览器的行为一致性

在浏览器中  </p> == > <p></p>
           </br>  == > <br>
           </a> == > '' 



//  currentParent.ns  当前父节点的作用域（命名空间）
var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

currentParent  表示当前解析的开始标签  父节点的描述对象
<div id='app'><span></span>{{ message }}</div>
1、 div  根节点      currentParent  === undefined
2、 span 子节点      currentParent  === {div...}


end函数 修正 stack 数组  解决兄弟元素的问题
<div id='app'>
        <span></span>
        <span></span>
        {{ message }}
</div>

[{div...},{span...}]
[{div...}]
currentParent = {div...}
